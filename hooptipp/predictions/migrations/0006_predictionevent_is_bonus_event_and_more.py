# Generated by Django 5.2.7 on 2025-10-14 18:02

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("predictions", "0005_usertip_is_locked_usertip_lock_committed_at_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="predictionevent",
            name="is_bonus_event",
            field=models.BooleanField(
                default=False,
                help_text="Indicates whether this event awards more than the default tip type points.",
            ),
        ),
        migrations.AddField(
            model_name="predictionevent",
            name="points",
            field=models.PositiveSmallIntegerField(
                default=1,
                help_text="Points awarded for a correct prediction on this event.",
            ),
        ),
        migrations.AddField(
            model_name="tiptype",
            name="default_points",
            field=models.PositiveSmallIntegerField(
                default=1,
                help_text="Base point value awarded for correctly predicting events in this tip type.",
            ),
        ),
        migrations.CreateModel(
            name="EventOutcome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("notes", models.TextField(blank=True)),
                ("scored_at", models.DateTimeField(blank=True, null=True)),
                ("score_error", models.TextField(blank=True)),
                (
                    "prediction_event",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outcome",
                        to="predictions.predictionevent",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_event_outcomes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "winning_option",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="winning_outcomes",
                        to="predictions.predictionoption",
                    ),
                ),
                (
                    "winning_player",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="winning_event_outcomes",
                        to="predictions.nbaplayer",
                    ),
                ),
                (
                    "winning_team",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="winning_event_outcomes",
                        to="predictions.nbateam",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event outcome",
                "verbose_name_plural": "Event outcomes",
            },
        ),
        migrations.CreateModel(
            name="UserEventScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("base_points", models.PositiveSmallIntegerField()),
                ("lock_multiplier", models.PositiveSmallIntegerField(default=1)),
                ("points_awarded", models.PositiveIntegerField()),
                ("is_lock_bonus", models.BooleanField(default=False)),
                ("awarded_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "prediction_event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scores",
                        to="predictions.predictionevent",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User event score",
                "verbose_name_plural": "User event scores",
                "ordering": ["-awarded_at", "user__username"],
                "unique_together": {("user", "prediction_event")},
            },
        ),
    ]
